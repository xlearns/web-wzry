const mongoose = require('mongoose')
const schema = new mongoose.Schema({
    name:{
        type:String
    },
    avatar:{
        type:String
    },
    banner:{
        type:String
    },
    title:{
        type:String
    },
    categories:[{
        /*
        //关联的类型mongoose.SchemaTypes.ObjectId
        //关联的对象ref
        //数组在mongoose里面表示是一个一个关联的id
        //=>关联Category模型下的id
        */
        type:mongoose.SchemaTypes.ObjectId,
        ref:"Category"
    }],
    // scores:评分 如果为[]=>index去取
    scores:{
        difficult:{
            type:Number
        },
        skills:{
            type:Number
        },
        attack:{
            type:Number
        },
        survive:{
            type:Number
        },
    },
    /*因为技能不是一个技能所有定义表结构用数组[]而技能里面不止有图片还有名字和其他类型所有定义一个对象里面装着各个类型。总结就是数组然后里面对象为1对多的关系*/
    skills:[
        {
            icon:{
                type:String
            },
            delay:{
                type:String
            },
            name:{
                type:String
            },
            cost:{
                type:String
            },
            desciption:{
                type:String
            },
            tips:{
                type:String
            },
        }
    ],
    items1:[
       {
           type:mongoose.SchemaTypes.ObjectId,
           ref:"Item"
       }
    ],
    items2:[
       {
           type:mongoose.SchemaTypes.ObjectId,
           ref:"Item"
       }
    ],
    usageTips:{
        type:String
    },
    battleTips:{
        type:String
    },
    teamTips:{
        type:String
    },
    partnes:[
        {
            hero:{
                type:mongoose.SchemaTypes.ObjectId,
                ref:"Hero"
            },
            description:{
                type:String
            }
        }
    ]
})
module.exports = mongoose.model('Hero',schema,"heroes")